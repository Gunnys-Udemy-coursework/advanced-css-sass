//Color palette
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;


*,
*::after,
*::before {
  /*Total page reset to eliminate inherited padding or margin properties */
  margin: 0;
  padding:0;
  /*All elements within will inherit from the body box-sizing*/
  box-sizing: inherit;
}

html {
  /*Setting a global font size for rem use elsewhere*/
  font-size: 62.5%;
}
body {
  /* Font settings done in the body and applies to all child elements of the body */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* set to border-box to eliminate adding unwanted padding */
  box-sizing: border-box;
}

.header {
  /* vh = viewport height */
  height: 95vh;
  background-image: linear-gradient(
                  to right bottom,
                  rgba($color-primary-light, 0.8),
                  rgba($color-primary-dark, 0.8)),
  url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo-box{
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    /* In relation to the parent element, */
    top: 40%;
    left: 50%;
    /* In relation to the element itself, */
    transform: translate(-50%, -50%);
    /*Button element is treated as text, this aligns it in center*/
    text-align: center;
  }
}

/*Notice how animation can be used for other than page load
    .logo:hover {
        animation: moveInRight 3s ease-in;
    }
*/

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*Hides the 'back' of a given element*/
  backface-visibility: hidden;
  /*Providing space between self and button below*/
  margin-bottom: 6rem;

  &--main{
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /*See keyframes by same name */
    animation-name: moveInLeft;
    /*Length of animation*/
    animation-duration: 3s;
    /*Speed of the assigned parameters*/
    animation-timing-function: ease-in;

    /* How many times the animation runs
        animation-iteration-count: 3;
    */

    /* How long of a delay before animation starts
        animation-delay: 3s;
    */

  }

  &--sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 1.74rem;
    /*Notice combined attributes versus separate lines, as seen for heading-primary-main*/
    animation: moveInRight 3s ease-in;
  }
}

@keyframes moveInLeft {
  0% {
    /*0 = fully opaque*/
    opacity: 0;
    /*Negative value = left of coded position*/
    transform: translateX(-10rem);
  }

  80%{
    /*Positive value = right of coded position*/
    transform: translateX(1rem);
  }

  100%{
    /*Fully visible*/
    opacity: 1;
    /*Ending position of 0 = coded position*/
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    /*0 = fully opaque*/
    opacity: 0;
    /*Positive value = right of coded position*/
    transform: translateX(10rem);
  }

  80%{
    /*Negative value = left of coded position*/
    transform: translateX(-1rem);
  }

  100%{
    /*Fully visible*/
    opacity: 1;
    /*Ending position of 0 = coded position*/
    transform: translate(0);
  }
}

@keyframes moveInBottom{
  0% {
    /*0 = fully opaque*/
    opacity: 0;
    /*Positive value = below coded position*/
    transform: translateY(3rem);
  }

  100%{
    opacity: 1;
    transform: translate(0);
  }
}

.btn{
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /*Rounds the edges of the button*/
    border-radius: 10rem;
    transition: all .2s;
    /*For the ::after, found below*/
    position: relative;
  }

  &:hover {
    /*Negative value moves the element up*/
    transform: translateY(-3px);
    /*Shadow effect with 0 offset-x, 10 pixels offset-y, 20 pixel blur radius, color black with 20% opacity*/
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

      &::after {
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
      }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

      &::after {
        background-color: $color-white;
      }
  }

  .btn::after {
    /*content and display are required or it will not show*/
    content: "";
    display: inline-block;
    /*These values will make it match the intended element; height, width, border-radius*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top:0;
    left: 0;
    /*Moves it behind the intended element*/
    z-index: -1;
    transition: all .4s;
  }

  .btn--animated {
    animation: moveInBottom 2s ease-out .75s;
    /*Applies styles of 0% before the animation starts*/
    animation-fill-mode: backwards;
  }
}
